name: CI-CD

on:
  workflow_dispatch:
    inputs:
        force_release:
          type: boolean
          default: false
          description: Force to push a release now
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 1 * * 1-5"

env:
  PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'hps_data_transfer.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-hps_data_transfer-client'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-changelog:
    name: "Update CHANGELOG (on release)"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-deploy-changelog@v7
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v7
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: "Documentation Style Check"
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@v8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    strategy:
      matrix:
          os: ['ubuntu-latest']
          cfg: [
              { python-version: '3.10', toxenv: 'py310' },
            ]
      fail-fast: false
    uses: ./.github/workflows/tests.yml
    secrets: inherit
    with:
      python-version: ${{ matrix.cfg.python-version }}
      toxenv: ${{ matrix.cfg.toxenv }}
      runner: ${{ matrix.os }}
      hps-version: ${{ inputs.hps-version || 'latest-dev' }}
      hps-feature: ${{ inputs.hps-feature || 'main' }}

  wheels:
    name: Wheels
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.wheels.outputs.version }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version:  ${{ env.PYTHON_VERSION }}

    - uses: extractions/netrc@v2
      with:
        machine: github.com
        username: pyansys-ci-bot
        password: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

    - name: Install dependencies and build the library
      id: wheels
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements/requirements_build.txt
        python build.py dev
        python build.py wheels
        python -m twine check dist/*
        version=$(ls dist/ | grep ansys_hps_data_transfer_client | grep -E -o "[0-9]+.[0-9]+.[0-9]+")
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Version: $version"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ansys-hps-data-transfer-client
        path: |
          dist/*.whl
        retention-days: 5

  release:
    name: Create release
    uses: ansys-internal/rep-job-management/.github/workflows/release.yml@main
    needs: ['wheels','tests']
    secrets: inherit
    with:
        tag: v${{ needs.wheels.outputs.version }}
        force_release: ${{ github.event.inputs.force_release == 'true' }}
        artifact: ''
        files: |
            /tmp/bin/*/*.whl
