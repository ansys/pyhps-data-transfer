name: CI-CD

on:
  workflow_dispatch:
      force_release:
          type: boolean
          default: false
          description: Force to push a release now
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 1 * * 1-5"

env:
  MAIN_PYTHON_VERSION: '3.10'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  
  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox
      - name: Test with tox
        run: tox -e style

  tests:
    name: Tests and coverage
    runs-on: ${{ matrix.os }}
    strategy:
      # max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        cfg:
          - {python-version: "3.10", toxenv: "py310"}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: pyansys-ci-bot
          password: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Fetch data transfer service client binary
        uses: robinraju/release-downloader@v1.8
        with:
            repository: "ansys-internal/rep-data-transfer"
            tag: 'latest-dev'
            fileName: "hpsdata"     
            token: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
            out-file-path: "release"

      - uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: pyansys-ci-bot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          python build.py dev
      
      - name: Start containers
        run: |
          docker-compose up -d

      - name: Run tests
        run: |
          export BINARY_PATH="$(pwd)/release/hpsdata"
          python build.py tests

      - name: Stop containers
        if: always()
        run: |
            docker-compose down -v

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/test*.xml'
          check_name: Test Report ${{ matrix.os }}:${{ matrix.cfg.python-version }} 

  wheels: 
    name: Wheels
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.wheels.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version:  ${{ env.MAIN_PYTHON_VERSION }}

    - uses: extractions/netrc@v2
      with:
        machine: github.com
        username: pyansys-ci-bot
        password: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

    - name: Fetch data transfer client windows binary
      uses: robinraju/release-downloader@v1.8
      with:
          repository: "ansys-internal/rep-data-transfer"
          tag: "latest-dev"
          fileName: "hpsdata.exe"
          token: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          out-file-path: "data-transfer-client-binary"

    - name: Fetch data transfer client linux binary
      uses: robinraju/release-downloader@v1.8
      with:
          repository: "ansys-internal/rep-data-transfer"
          tag: "latest-dev"
          fileName: "hpsdata"
          token: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          out-file-path: "data-transfer-client-binary"

    - name: Move data transfer client binaries
      run: |
        mkdir ansys/hps/dt_client/data_transfer/bin
        mv data-transfer-client-binary/* ansys/hps/dt_client/data_transfer/bin/

    - name: Install dependencies and build the library
      id: wheels      
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -r requirements/requirements_build.txt
        python build.py dev
        python build.py wheels --no-priv
        python -m twine check dist/*
        version=$(ls dist/ | grep ansys_hps_client_data_transfer | grep -E -o "[0-9]+.[0-9]+.[0-9]+")
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Version: $version"
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ansys-hps-data-transfer-client
        path: |
          dist/*.whl
        retention-days: 5

  release:
    name: Create release
    uses: ansys-internal/rep-job-management/.github/workflows/release.yml@main
    needs: ['wheels','tests']
    secrets: inherit
    with:
        tag: v${{ needs.wheels.outputs.version }}
        force_release: ${{ github.event.inputs.force_release == 'true' }}
        artifact: ''
        files: |
            /tmp/bin/*/*.whl
