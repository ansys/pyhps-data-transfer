name: "[daily] Update pydantic models"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * 1-5"

env:
  PYTHON_VERSION: '3.10'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  generate:
    name: Model generation
    runs-on: ubuntu-latest-8-cores
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - uses: actions/checkout@v4
        with:
          repository: ansys-internal/rep-data-transfer
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          path: core

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: pyansys-ci-bot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create venv
        run: |
            python3 -m venv dev_env            

      - name: Generate models
        run: |
            cp core/docs/worker/swagger.json openapi2.json
            ./generate_models.sh
            ls -lah
            sudo rm -rf out


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox tox-gh-actions
          mkdir docker-compose-artifact

      - name: Start HPS services
        id: hps-services
        uses: ansys/pyhps/.github/actions/hps_services@main
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          ghcr-username: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          ghcr-token: ${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}
          version: ${{ inputs.hps-version || 'latest-dev' }}
          feature: ${{ inputs.hps-feature || 'main' }}

      - name: Test with tox
        run: tox -e py310-coverage
        env:
          HPS_TEST_URL: ${{ steps.hps-services.outputs.url }}
          HPS_TEST_USERNAME: repadmin
          HPS_TEST_PASSWORD: repadmin
    

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/test*.xml'
          check_name: Test report

      - name: "Create PR if changes detected"
        id: create-pr
        if: startsWith(github.ref, 'refs/heads/main')
        uses: peter-evans/create-pull-request@v6
        with:
          title: "[Auto] Update pydantic models"
          base: main
          branch: model_updates
          delete-branch: true
          reviewers: nezgrath
          add-paths: |
            ansys/hps/data_transfer/client/models
