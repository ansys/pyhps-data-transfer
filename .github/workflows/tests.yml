name: "[callable] Tests"

on:
  workflow_dispatch:
    inputs:
      py-version:
        default: "3.12"
        type: string
        description: Python version
      ssh-enabled:
        default: false
        type: boolean
        description: Allow SSH connection on failure

  workflow_call:
    inputs:
      py-version:
        required: true
        type: string
        description: Python version
      ssh-enabled:
        required: false
        type: boolean
        description: Allow SSH connection on failure
    

jobs:
  linux:
    name: Linux
    runs-on:
      group: "Default Larger Runners"
      labels: ${{ matrix.os }}
    strategy:
      # max-parallel: 1
      matrix:
        os: [ubuntu-latest-8-cores]
        cfg:
          - {python-version: "3.10", toxenv: "py310"}
          - {python-version: "3.12", toxenv: "py312"}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: pyansys-ci-bot
          password: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: pyansys-ci-bot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          python build.py dev
      
      - name: Start containers
        run: |
          docker-compose up --wait

      - name: Run tests
        run: |
          python build.py tests

      - name: Stop containers
        if: always()
        run: |
            docker-compose down -v

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/test*.xml'
          check_name: Test Report ${{ matrix.os }}:${{ matrix.cfg.python-version }} 