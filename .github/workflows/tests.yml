name: "[callable] Tests"

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      python-version:
        description: Python version to use
        type: string
        default: '3.10'
      toxenv:
        description: Name of the tox environment
        type: string
        default: 'py310'
      runner:
        description: Where to run
        type: string
        default: 'ubuntu-latest'
      hps-version:
        description: HPS version to test against
        type: string
        default: 'latest-dev'
      hps-feature:
        description: HPS Feature to test against (only for latest-dev version)
        type: string
        default: 'main'

jobs:
  linux:
    name: Linux
    runs-on:
      group: "Default Larger Runners"
      labels: ${{ matrix.os }}
    strategy:
      # max-parallel: 1
      matrix:
        os: [ubuntu-latest-8-cores]
        cfg:
          - {python-version: "3.10", toxenv: "py310"}
          - {python-version: "3.12", toxenv: "py312"}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - uses: extractions/netrc@v2
        with:
          machine: github.com
          username: pyansys-ci-bot
          password: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}

      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox tox-gh-actions
          mkdir docker-compose-artifact

      - name: Start HPS services
        id: hps-services
        uses: ./.github/actions/hps_services
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          ghcr-username: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          ghcr-token: ${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}
          version: ${{ inputs.hps-version }}
          feature: ${{ inputs.hps-feature }}

      - name: Test with tox
        run: tox -e ${{ inputs.toxenv }}-coverage
        env:
          HPS_TEST_URL: ${{ steps.hps-services.outputs.url }}
          HPS_TEST_USERNAME: repadmin
          HPS_TEST_PASSWORD: repadmin

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        if: ${{ inputs.python-version == '3.10' }}
        with:
          name: coverage-html
          path: .cov/html
          retention-days: 7

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ inputs.python-version == '3.10' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: '**/test*.xml'

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/test*.xml'
          check_name: Test report ${{ matrix.os }}:${{ matrix.cfg.python-version }}
          detailed_summary: true
          include_passed: true
