# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-05-06T15:33:03+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field

from . import ops


class StorageConfigResponse(BaseModel):
    storage: Optional[List[Dict[str, Any]]] = None


class StoragePath(BaseModel):
    path: str
    remote: Optional[str] = 'any'


class TokenRequest(BaseModel):
    other: Optional[Dict[str, Any]] = Field(None, description='For custom use')
    read: Optional[List[str]] = None
    write: Optional[List[str]] = None


class TokenResponse(BaseModel):
    pass


class BuildInfo(BaseModel):
    branch: Optional[str] = None
    mode: Optional[str] = None
    revision: Optional[str] = None
    short_revision: Optional[str] = None
    version: Optional[str] = None


class OpIdResponse(BaseModel):
    id: Optional[str] = '2diK2kCkpgeHAQSNthIZ1JYyPte'
    location: Optional[str] = '/api/v1/operations/2diK2kCkpgeHAQSNthIZ1JYyPte'


class OpsRequest(BaseModel):
    ids: List[str]


class Status(BaseModel):
    build_info: Optional[BuildInfo] = None
    time: Optional[str] = None


class PathOperations(BaseModel):
    operations: List[StoragePath]


class SrcDst(BaseModel):
    dst: StoragePath
    src: StoragePath


class SrcDstOperations(BaseModel):
    operations: List[SrcDst]


class OpsResponse(BaseModel):
    operations: Optional[List[ops.Operation]] = None
