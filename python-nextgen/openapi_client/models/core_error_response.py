# coding: utf-8

"""
    HPS Data Transfer Server API

    [WIP].  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictStr

class CoreErrorResponse(BaseModel):
    """
    CoreErrorResponse
    """
    error: Optional[StrictStr] = 'something bad happened'
    __properties = ["error"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CoreErrorResponse:
        """Create an instance of CoreErrorResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CoreErrorResponse:
        """Create an instance of CoreErrorResponse from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return CoreErrorResponse.parse_obj(obj)

        _obj = CoreErrorResponse.parse_obj({
            "error": obj.get("error") if obj.get("error") is not None else 'something bad happened'
        })
        return _obj

